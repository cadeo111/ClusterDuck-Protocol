# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "heltec_wifi_lora_32_V2;cubecell_board;zeroUSB;ttgo-t-beam;SparkFun_Thing_Plus_expLoRaBLE;" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)

# Convert "Home Directory" that may contain unescaped backslashes on Windows


SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++")
SET(CMAKE_CXX_FLAGS "-fno-rtti -fno-exceptions -std=gnu++11 -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")
SET(CMAKE_C_FLAGS "-std=gnu99 -Wno-old-style-declaration -Os -g3 -Wall -nostdlib -Wpointer-arith -Wno-error=unused-but-set-variable -Wno-error=unused-variable -mlongcalls -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wno-error=deprecated-declarations -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -fstack-protector -fexceptions -Werror=reorder")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "heltec_wifi_lora_32_V2")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_HELTEC_WIFI_LORA_32_V2)
    add_definitions(-DESP32)
    add_definitions(-DESP_PLATFORM)
    add_definitions(-DF_CPU=240000000L)
    add_definitions(-DHAVE_CONFIG_H)
    add_definitions(-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\")
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_ARCH_ESP32)
    add_definitions(-DARDUINO_VARIANT=\"heltec_wifi_lora_32_V2\")
    add_definitions(-DARDUINO_BOARD=\"Heltec\ WiFi\ LoRa\ 32\ \(V2\)\")

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/efuse")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_websocket_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/espcoredump")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/unity")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/variants/heltec_wifi_lora_32_V2")
    include_directories("$ENV{HOME}/github/DIY_pedals")
    include_directories("$ENV{HOME}/github/LoRaComm")
    include_directories("$ENV{HOME}/github/calibre_library")
    include_directories("$ENV{HOME}/github/go_gravity_tales_downloader")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdateServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiProv/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/heltec_wifi_lora_32_V2/*.*
        $ENV{HOME}/github/*.*
    )
endif()

if (CMAKE_BUILD_TYPE MATCHES "cubecell_board")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DCubeCell_Board)
    add_definitions(-DARDUINO=10813)
    add_definitions(-DARDUINO_ARCH_ASR650X)
    add_definitions(-D__ASR6501__)
    add_definitions(-D__asr650x__)
    add_definitions(-DCONFIG_MANUFACTURER=\"ASR\")
    add_definitions(-DCONFIG_DEVICE_MODEL=\"6501\")
    add_definitions(-DCONFIG_VERSION=\"v4.0\")
    add_definitions(-DCY_CORE_ID=0)
    add_definitions(-DCONFIG_LORA_USE_TCXO)
    add_definitions(-DF_CPU=48000000L)
    add_definitions(-DSOFT_SE)
    add_definitions(-DREGION_US915)
    add_definitions(-DACTIVE_REGION=LORAMAC_REGION_US915)
    add_definitions(-DLORAWAN_CLASS=CLASS_A)
    add_definitions(-DLORAWAN_NETMODE=true)
    add_definitions(-DLORAWAN_ADR=true)
    add_definitions(-DLORAWAN_UPLINKMODE=true)
    add_definitions(-DLORAWAN_NET_RESERVE=false)
    add_definitions(-DAT_SUPPORT=1)
    add_definitions(-DLORAWAN_DEVEUI_AUTO=0)
    add_definitions(-DLoraWan_RGB=1)
    add_definitions(-DLoRaWAN_DEBUG_LEVEL=0)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/LoRa/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/DISPLAY/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/RGB/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/LoraWan102/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/EEPROM")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/board")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/board/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/board/inc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/device/sx126x")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/lora")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/lora/radio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/lora/system")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/lora/system/crypto")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/port")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/projects")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/projects/PSoC4")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/cores")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/Serial")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/cores/asr650x/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/variants/CubeCell-Board")
    include_directories("$ENV{HOME}/github/DIY_pedals")
    include_directories("$ENV{HOME}/github/LoRaComm")
    include_directories("$ENV{HOME}/github/calibre_library")
    include_directories("$ENV{HOME}/github/go_gravity_tales_downloader")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/Basics/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/LoRaWanMinimal/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/OnBoardGPS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/OneWire")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/SensorBasic/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/Sensor_ThirdParty/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoasrmicro650x/libraries/Time")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/cubecell_board/*.*
        $ENV{HOME}/github/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "SparkFun_Thing_Plus_expLoRaBLE")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_AM_AP3_THING_PLUS_expLoRaBLE)
    add_definitions(-DMBED_NO_GLOBAL_USING_DIRECTIVE)
    add_definitions(-DARDUINO=10811)
    add_definitions(-DARDUINO_ARCH_APOLLO3)
    add_definitions(-DARDUINO_ARCH_MBED)
    add_definitions(-DMBED_NO_GLOBAL_USING_DIRECTIVE)
    add_definitions(-DCORDIO_ZERO_COPY_HCI)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/variants/LoRa_THING_PLUS_expLoRaBLE")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/cores/arduino/mbed-bridge")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/cores/arduino/mbed-bridge/core-api")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/cores/arduino/mbed-bridge/core-api/api/deprecated")
    include_directories("$ENV{HOME}/github/DIY_pedals")
    include_directories("$ENV{HOME}/github/LoRaComm")
    include_directories("$ENV{HOME}/github/calibre_library")
    include_directories("$ENV{HOME}/github/go_gravity_tales_downloader")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/Apollo3/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/BurstMode/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/PDM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/RTC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/Servo/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/WDT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoapollo3/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include/c++/9.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/lib/gcc/arm-none-eabi/9.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/SparkFun_Thing_Plus_expLoRaBLE/*.*
        $ENV{HOME}/github/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "zeroUSB")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_SAMD_ZERO)
    add_definitions(-D__SAMD21G18A__)
    add_definitions(-DARDUINO=10805)
    add_definitions(-DF_CPU=48000000L)
    add_definitions(-DUSBCON)
    add_definitions(-DUSB_VID=0x2341)
    add_definitions(-DUSB_PID=0x804D)
    add_definitions(-DUSB_PRODUCT=\"Arduino\ Zero\")
    add_definitions(-DUSB_MANUFACTURER=\"Arduino\")
    add_definitions(-DARDUINO_ARCH_SAMD)

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SPI")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino/api/deprecated-avr-comp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis/CMSIS/Include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-cmsis-atmel/CMSIS/Device/ATMEL")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/cores/arduino")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/variants/arduino_zero")
    include_directories("$ENV{HOME}/github/DIY_pedals")
    include_directories("$ENV{HOME}/github/LoRaComm")
    include_directories("$ENV{HOME}/github/calibre_library")
    include_directories("$ENV{HOME}/github/go_gravity_tales_downloader")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/HID")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/I2S/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SAMD_AnalogCorrection/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SAMD_BootloaderUpdater/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SBU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SDU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SFU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SNU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/SSU/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/USBHost/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduino-samd/libraries/Wire")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include/c++/7.2.1/arm-none-eabi")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/lib/gcc/arm-none-eabi/7.2.1/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-gccarmnoneeabi@1.70201.0/arm-none-eabi/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/zeroUSB/*.*
        $ENV{HOME}/github/*.*
    )
endif()
if (CMAKE_BUILD_TYPE MATCHES "ttgo-t-beam")
    add_definitions(-DPLATFORMIO=50205)
    add_definitions(-DARDUINO_T_Beam)
    add_definitions(-DBOARD_HAS_PSRAM)
    add_definitions(-DESP32)
    add_definitions(-DESP_PLATFORM)
    add_definitions(-DF_CPU=240000000L)
    add_definitions(-DHAVE_CONFIG_H)
    add_definitions(-DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\")
    add_definitions(-DARDUINO=10805)
    add_definitions(-DARDUINO_ARCH_ESP32)
    add_definitions(-DARDUINO_VARIANT=\"tbeam\")
    add_definitions(-DARDUINO_BOARD=\"TTGO\ T-Beam\")

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ArduinoOTA/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPI/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Update/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiClientSecure/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESPmDNS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/DNSServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFi/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/EEPROM/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_trace")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/app_update")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/asio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bootloader_support")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/bt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/driver")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/efuse")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_adc_cal")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_event")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_http_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_ota")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_https_server")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_ringbuf")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp_websocket_client")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/espcoredump")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ethernet")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/expat")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fatfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freemodbus")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/freertos")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/heap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/idf_test")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/jsmn")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/json")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/libsodium")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/log")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/lwip")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mbedtls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mdns")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/micro-ecc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/mqtt")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/newlib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nghttp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/nvs_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/openssl")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/protocomm")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/pthread")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/sdmmc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/smartconfig_ack")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/soc")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spi_flash")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/spiffs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcp_transport")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/tcpip_adapter")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/ulp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/unity")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wear_levelling")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wifi_provisioning")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/wpa_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/xtensa-debug-module")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp-face")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/esp32-camera")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/tools/sdk/include/fb_gfx")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/cores/esp32")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/variants/tbeam")
    include_directories("$ENV{HOME}/github/DIY_pedals")
    include_directories("$ENV{HOME}/github/LoRaComm")
    include_directories("$ENV{HOME}/github/calibre_library")
    include_directories("$ENV{HOME}/github/go_gravity_tales_downloader")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AsyncUDP/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/AzureIoT/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/BluetoothSerial/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/ESP32/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FFat/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/FS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPClient/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdate/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/HTTPUpdateServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/NetBIOS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Preferences/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SD_MMC/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SPIFFS/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/SimpleBLE/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Ticker/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WebServer/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/WiFiProv/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-arduinoespressif32/libraries/Wire/src")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/5.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/5.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/ttgo-t-beam/*.*
        $ENV{HOME}/github/*.*
    )
endif()

FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
    ${CMAKE_CURRENT_LIST_DIR}/test/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
